## üöÄ **POSTMAN COLLECTION CHO MENU SERVICE**

### **Base URL:** `http://localhost:8002`

### **1. CATEGORY APIs**

#### **1.1 T·∫°o Category**
```http
POST {{baseUrl}}/api/restaurant/category
Content-Type: application/json

{
  "categoryId": "cat-food-001",
  "name": "M√≥n Ch√≠nh",
  "description": "C√°c m√≥n ƒÉn ch√≠nh",
  "type": "Food",
  "active": true
}
```

#### **1.2 C·∫≠p nh·∫≠t Category**
```http
PUT {{baseUrl}}/api/restaurant/category/cat-food-001
Content-Type: application/json

{
  "name": "M√≥n Ch√≠nh ƒê·∫∑c Bi·ªát",
  "description": "C√°c m√≥n ƒÉn ch√≠nh ƒë·∫∑c bi·ªát",
  "type": "Food"
}
```

#### **1.3 B·∫≠t/t·∫Øt Category**
```http
PATCH {{baseUrl}}/api/restaurant/category/cat-food-001/active?active=false
```

#### **1.4 X√≥a Category**
```http
DELETE {{baseUrl}}/api/restaurant/category/cat-food-001
```

#### **1.5 L·∫•y t·∫•t c·∫£ Categories**
```http
GET {{baseUrl}}/api/restaurant/category
```

#### **1.6 L·∫•y Category theo ID**
```http
GET {{baseUrl}}/api/restaurant/category/cat-food-001
```

#### **1.7 L·∫•y Categories theo lo·∫°i**
```http
GET {{baseUrl}}/api/restaurant/category/type/Food
```

### **2. MENU ITEM APIs**

#### **2.1 T·∫°o Menu Item**
```http
POST {{baseUrl}}/api/restaurant/menu/items
Content-Type: application/json

{
  "menuItemId": "item-pho-001",
  "name": "Ph·ªü B√≤",
  "categoryId": "cat-food-001",
  "description": "Ph·ªü b√≤ truy·ªÅn th·ªëng",
  "price": 45000.0,
  "active": true,
  "ingredients": ["b√°nh ph·ªü", "th·ªãt b√≤", "h√†nh t√¢y", "rau th∆°m"]
}
```

#### **2.2 C·∫≠p nh·∫≠t Menu Item**
```http
PUT {{baseUrl}}/api/restaurant/menu/items/item-pho-001
Content-Type: application/json

{
  "name": "Ph·ªü B√≤ ƒê·∫∑c Bi·ªát",
  "categoryId": "cat-food-001",
  "description": "Ph·ªü b√≤ ƒë·∫∑c bi·ªát v·ªõi th·ªãt b√≤ t√°i",
  "price": 55000.0,
  "ingredients": ["b√°nh ph·ªü", "th·ªãt b√≤ t√°i", "h√†nh t√¢y", "rau th∆°m", "ch·∫£ c√°"]
}
```

#### **2.3 B·∫≠t/t·∫Øt Menu Item**
```http
PATCH {{baseUrl}}/api/restaurant/menu/items/item-pho-001/active?active=false
```

#### **2.4 G·∫Øn nguy√™n li·ªáu cho Menu Item**
```http
PATCH {{baseUrl}}/api/restaurant/menu/items/item-pho-001/ingredients
Content-Type: application/json

["b√°nh ph·ªü", "th·ªãt b√≤", "h√†nh t√¢y", "rau th∆°m", "ch·∫£ c√°", "n∆∞·ªõc d√πng"]
```

#### **2.5 Auto-toggle Menu Item**
```http
PATCH {{baseUrl}}/api/restaurant/menu/items/item-pho-001/auto-toggle?reason=INVENTORY_LOW&ingredientId=th·ªãt b√≤
```

#### **2.6 X√≥a Menu Item**
```http
DELETE {{baseUrl}}/api/restaurant/menu/items/item-pho-001
```

#### **2.7 L·∫•y t·∫•t c·∫£ Menu Items (c√≥ filter/pagination)**
```http
GET {{baseUrl}}/api/restaurant/menu/items?categoryId=cat-food-001&active=true&minPrice=30000&maxPrice=60000&page=0&size=10
```

#### **2.8 L·∫•y Menu Item theo ID**
```http
GET {{baseUrl}}/api/restaurant/menu/items/item-pho-001
```

### **3. COMBO APIs**

#### **3.1 T·∫°o Combo**
```http
POST {{baseUrl}}/api/restaurant/combo
Content-Type: application/json

{
  "comboId": "combo-set-001",
  "name": "Combo Ph·ªü Set",
  "description": "Ph·ªü + n∆∞·ªõc u·ªëng + tr√°ng mi·ªáng",
  "price": 80000.0,
  "discount": 10.0,
  "menuItemIds": ["item-pho-001", "item-tra-001", "item-che-001"],
  "active": true
}
```

#### **3.2 C·∫≠p nh·∫≠t Combo**
```http
PUT {{baseUrl}}/api/restaurant/combo/combo-set-001
Content-Type: application/json

{
  "name": "Combo Ph·ªü Set ƒê·∫∑c Bi·ªát",
  "description": "Ph·ªü ƒë·∫∑c bi·ªát + n∆∞·ªõc u·ªëng + tr√°ng mi·ªáng",
  "price": 90000.0,
  "discount": 15.0,
  "menuItemIds": ["item-pho-001", "item-tra-001", "item-che-001", "item-banh-001"]
}
```

#### **3.3 B·∫≠t/t·∫Øt Combo**
```http
PATCH {{baseUrl}}/api/restaurant/combo/combo-set-001/active?active=false
```

#### **3.4 Th√™m Menu Item v√†o Combo**
```http
POST {{baseUrl}}/api/restaurant/combo/combo-set-001/items/item-banh-001
```

#### **3.5 X√≥a Menu Item kh·ªèi Combo**
```http
DELETE {{baseUrl}}/api/restaurant/combo/combo-set-001/items/item-banh-001
```

#### **3.6 X√≥a Combo**
```http
DELETE {{baseUrl}}/api/restaurant/combo/combo-set-001
```

#### **3.7 L·∫•y t·∫•t c·∫£ Combos**
```http
GET {{baseUrl}}/api/restaurant/combo
```

#### **3.8 L·∫•y Combo theo ID**
```http
GET {{baseUrl}}/api/restaurant/combo/combo-set-001
```

#### **3.9 L·∫•y Combos ch·ª©a Menu Item**
```http
GET {{baseUrl}}/api/restaurant/combo/menu-item/item-pho-001
```

### **4. TEST SCENARIOS**

#### **4.1 Test Flow Ho√†n Ch·ªânh**
1. **T·∫°o Category** ‚Üí `POST /api/restaurant/category`
2. **T·∫°o Menu Items** ‚Üí `POST /api/restaurant/menu/items` (nhi·ªÅu items)
3. **T·∫°o Combo** ‚Üí `POST /api/restaurant/combo`
4. **Test Query** ‚Üí `GET /api/restaurant/menu/items` v·ªõi filters
5. **Test Auto-toggle** ‚Üí `PATCH /api/restaurant/menu/items/{id}/auto-toggle`

#### **4.2 Test Data M·∫´u**

**Categories:**
```json
[
  {
    "categoryId": "cat-food-001",
    "name": "M√≥n Ch√≠nh",
    "description": "C√°c m√≥n ƒÉn ch√≠nh",
    "type": "Food",
    "active": true
  },
  {
    "categoryId": "cat-drink-001", 
    "name": "N∆∞·ªõc U·ªëng",
    "description": "C√°c lo·∫°i n∆∞·ªõc u·ªëng",
    "type": "Drink",
    "active": true
  },
  {
    "categoryId": "cat-dessert-001",
    "name": "Tr√°ng Mi·ªáng", 
    "description": "C√°c m√≥n tr√°ng mi·ªáng",
    "type": "Dessert",
    "active": true
  }
]
```

**Menu Items:**
```json
[
  {
    "menuItemId": "item-pho-001",
    "name": "Ph·ªü B√≤",
    "categoryId": "cat-food-001",
    "description": "Ph·ªü b√≤ truy·ªÅn th·ªëng",
    "price": 45000.0,
    "active": true,
    "ingredients": ["b√°nh ph·ªü", "th·ªãt b√≤", "h√†nh t√¢y", "rau th∆°m"]
  },
  {
    "menuItemId": "item-tra-001",
    "name": "Tr√† ƒê√°",
    "categoryId": "cat-drink-001", 
    "description": "Tr√† ƒë√° m√°t l·∫°nh",
    "price": 10000.0,
    "active": true,
    "ingredients": ["tr√†", "ƒë√°", "ƒë∆∞·ªùng"]
  },
  {
    "menuItemId": "item-che-001",
    "name": "Ch√® ƒê·∫≠u ƒê·ªè",
    "categoryId": "cat-dessert-001",
    "description": "Ch√® ƒë·∫≠u ƒë·ªè ng·ªçt ng√†o",
    "price": 15000.0,
    "active": true,
    "ingredients": ["ƒë·∫≠u ƒë·ªè", "ƒë∆∞·ªùng", "n∆∞·ªõc c·ªët d·ª´a"]
  }
]
```

**Combo:**
```json
{
  "comboId": "combo-set-001",
  "name": "Combo Ph·ªü Set",
  "description": "Ph·ªü + n∆∞·ªõc u·ªëng + tr√°ng mi·ªáng",
  "price": 80000.0,
  "discount": 10.0,
  "menuItemIds": ["item-pho-001", "item-tra-001", "item-che-001"],
  "active": true
}
```

### **5. POSTMAN ENVIRONMENT VARIABLES**
```json
{
  "baseUrl": "http://localhost:8002",
  "categoryId": "cat-food-001",
  "menuItemId": "item-pho-001", 
  "comboId": "combo-set-001"
}
```

### **6. EXPECTED RESPONSES**

**Success Response:**
```json
{
  "status": "SUCCESS",
  "message": "Command processed successfully",
  "data": "command-id-or-result"
}
```

**Error Response:**
```json
{
  "status": "ERROR",
  "message": "Error description",
  "errorCode": "ERROR_CODE",
  "details": "Additional error details"
}
```

**Paged Response:**
```json
{
  "items": [...],
  "page": 0,
  "size": 20,
  "totalElements": 100,
  "totalPages": 5
}