{
	"info": {
		"_postman_id": "userservice-api-collection-v2",
		"name": "User Service API - Restaurant Management",
		"description": "Complete API collection for User Service with Keycloak integration. All responses follow ApiResponseDTO structure: {success, message, data, status}",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Management",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Response has success field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('success');",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});",
									"pm.test(\"Response has data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData.data).to.have.property('userId');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"customer@restaurant.com\",\n    \"username\": \"customer01\",\n    \"password\": \"customer123\",\n    \"firstName\": \"Nguyen\",\n    \"lastName\": \"Van A\",\n    \"phone\": \"0901234567\",\n    \"address\": \"123 Nguyen Hue, Ho Chi Minh\",\n    \"role\": \"CUSTOMER\",\n    \"avatarUrl\": \"https://example.com/avatar.jpg\",\n    \"avatarPublicId\": \"avatar-id-123\",\n    \"dateOfBirth\": \"1990-01-15\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users"]
						},
						"description": "Create a new user. User will be created in Keycloak first, then saved to local database.\n\n**Response Structure:**\n```json\n{\n  \"success\": true,\n  \"message\": \"User created successfully\",\n  \"data\": {\n    \"id\": 1,\n    \"userId\": \"user-1234567890\",\n    \"email\": \"customer@restaurant.com\",\n    ...\n  },\n  \"status\": 201\n}\n```"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response is successful\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/:userId",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", ":userId"],
							"variable": [
								{
									"key": "userId",
									"value": "user-1234567890",
									"description": "User ID from Keycloak (from create response)"
								}
							]
						},
						"description": "Get user information by userId.\n\n**Response Structure:**\n```json\n{\n  \"success\": true,\n  \"message\": \"User retrieved successfully\",\n  \"data\": { ... },\n  \"status\": 200\n}\n```"
					},
					"response": []
				},
				{
					"name": "Get User by Email",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/email/:email",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", "email", ":email"],
							"variable": [
								{
									"key": "email",
									"value": "customer@restaurant.com"
								}
							]
						},
						"description": "Get user information by email address."
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users?page=0&size=20&search=&role=&status=",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users"],
							"query": [
								{
									"key": "page",
									"value": "0",
									"description": "Page number (0-based)"
								},
								{
									"key": "size",
									"value": "20",
									"description": "Page size"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search term (searches in email, username, firstName, lastName, phone)"
								},
								{
									"key": "role",
									"value": "",
									"description": "Filter by role: CUSTOMER, STAFF, MANAGER, ADMIN"
								},
								{
									"key": "status",
									"value": "",
									"description": "Filter by status: ACTIVE, INACTIVE, BANNED"
								}
							]
						},
						"description": "Get paginated list of users with optional filters.\n\n**Response Structure:**\n```json\n{\n  \"success\": true,\n  \"message\": \"Users retrieved successfully\",\n  \"data\": {\n    \"users\": [...],\n    \"page\": 0,\n    \"size\": 20,\n    \"totalElements\": 100,\n    \"totalPages\": 5\n  },\n  \"status\": 200\n}\n```"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"updated@restaurant.com\",\n    \"firstName\": \"Updated First\",\n    \"lastName\": \"Updated Last\",\n    \"phone\": \"0987654321\",\n    \"address\": \"456 Le Loi, Ho Chi Minh\",\n    \"role\": \"STAFF\",\n    \"status\": \"ACTIVE\",\n    \"avatarUrl\": \"https://example.com/new-avatar.jpg\",\n    \"avatarPublicId\": \"avatar-id-456\",\n    \"dateOfBirth\": \"1995-05-15\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/:userId",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", ":userId"],
							"variable": [
								{
									"key": "userId",
									"value": "user-1234567890"
								}
							]
						},
						"description": "Update user information. Only provided fields will be updated.\n\n**Response Structure:**\n```json\n{\n  \"success\": true,\n  \"message\": \"User updated successfully\",\n  \"data\": { ... },\n  \"status\": 200\n}\n```"
					},
					"response": []
				},
				{
					"name": "Toggle User Status",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/:userId/status?status=INACTIVE",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", ":userId", "status"],
							"query": [
								{
									"key": "status",
									"value": "INACTIVE",
									"description": "Status: ACTIVE, INACTIVE, BANNED"
								}
							],
							"variable": [
								{
									"key": "userId",
									"value": "user-1234567890"
								}
							]
						},
						"description": "Change user status.\n\n**Response Structure:**\n```json\n{\n  \"success\": true,\n  \"message\": \"User status updated successfully\",\n  \"data\": { ... },\n  \"status\": 200\n}\n```"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/:userId",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", ":userId"],
							"variable": [
								{
									"key": "userId",
									"value": "user-1234567890"
								}
							]
						},
						"description": "Delete user from database.\n\n**Response Structure:**\n```json\n{\n  \"success\": true,\n  \"message\": \"User deleted successfully\",\n  \"data\": null,\n  \"status\": 200\n}\n```"
					},
					"response": []
				}
			],
			"description": "CRUD operations for User Management"
		},
		{
			"name": "Create Different Roles",
			"item": [
				{
					"name": "Create Customer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"customer@restaurant.com\",\n    \"username\": \"customer01\",\n    \"password\": \"customer123\",\n    \"firstName\": \"Khach\",\n    \"lastName\": \"Hang\",\n    \"phone\": \"0901234567\",\n    \"address\": \"123 Nguyen Hue, HCM\",\n    \"role\": \"CUSTOMER\",\n    \"dateOfBirth\": \"1990-01-01\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users"]
						}
					},
					"response": []
				},
				{
					"name": "Create Staff",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"staff@restaurant.com\",\n    \"username\": \"staff01\",\n    \"password\": \"staff123\",\n    \"firstName\": \"Nhan\",\n    \"lastName\": \"Vien\",\n    \"phone\": \"0912345678\",\n    \"address\": \"456 Le Loi, HCM\",\n    \"role\": \"STAFF\",\n    \"dateOfBirth\": \"1995-05-15\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users"]
						}
					},
					"response": []
				},
				{
					"name": "Create Manager",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"manager@restaurant.com\",\n    \"username\": \"manager01\",\n    \"password\": \"manager123\",\n    \"firstName\": \"Quan\",\n    \"lastName\": \"Ly\",\n    \"phone\": \"0923456789\",\n    \"address\": \"789 Dong Khoi, HCM\",\n    \"role\": \"MANAGER\",\n    \"dateOfBirth\": \"1985-10-20\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users"]
						}
					},
					"response": []
				},
				{
					"name": "Create Admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@restaurant.com\",\n    \"username\": \"admin01\",\n    \"password\": \"admin123\",\n    \"firstName\": \"Quan\",\n    \"lastName\": \"Tri\",\n    \"phone\": \"0934567890\",\n    \"address\": \"321 Pasteur, HCM\",\n    \"role\": \"ADMIN\",\n    \"dateOfBirth\": \"1980-12-25\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users"]
						}
					},
					"response": []
				}
			],
			"description": "Examples for creating users with different roles"
		},
		{
			"name": "Search & Filter Examples",
			"item": [
				{
					"name": "Search Users by Email",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users?search=customer@restaurant.com",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users"],
							"query": [
								{
									"key": "search",
									"value": "customer@restaurant.com"
								}
							]
						},
						"description": "Search users by email, username, firstName, lastName, or phone"
					},
					"response": []
				},
				{
					"name": "Filter by Role - CUSTOMER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users?role=CUSTOMER",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users"],
							"query": [
								{
									"key": "role",
									"value": "CUSTOMER"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter by Role - STAFF",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users?role=STAFF",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users"],
							"query": [
								{
									"key": "role",
									"value": "STAFF"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter by Status - ACTIVE",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users?status=ACTIVE",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users"],
							"query": [
								{
									"key": "status",
									"value": "ACTIVE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter by Status - INACTIVE",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users?status=INACTIVE",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users"],
							"query": [
								{
									"key": "status",
									"value": "INACTIVE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Combined Search & Filter",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users?page=0&size=10&search=Nguyen&role=CUSTOMER&status=ACTIVE",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users"],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "search",
									"value": "Nguyen"
								},
								{
									"key": "role",
									"value": "CUSTOMER"
								},
								{
									"key": "status",
									"value": "ACTIVE"
								}
							]
						},
						"description": "Example of combining search term with filters"
					},
					"response": []
				}
			],
			"description": "Search and filter examples"
		},
		{
			"name": "Error Examples",
			"item": [
				{
					"name": "Create User - Validation Error",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"invalid-email\",\n    \"username\": \"\",\n    \"firstName\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users"]
						},
						"description": "Example of validation error response:\n```json\n{\n  \"success\": false,\n  \"message\": \"Validation failed\",\n  \"data\": {\n    \"email\": \"Email must be valid\",\n    \"username\": \"Username is required\",\n    \"firstName\": \"First name is required\"\n  },\n  \"status\": 400\n}\n```"
					},
					"response": []
				},
				{
					"name": "Create User - Duplicate Email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"customer@restaurant.com\",\n    \"username\": \"newuser\",\n    \"password\": \"password123\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\",\n    \"role\": \"CUSTOMER\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users"]
						},
						"description": "Example of duplicate email error:\n```json\n{\n  \"success\": false,\n  \"message\": \"Email already exists: customer@restaurant.com\",\n  \"data\": null,\n  \"status\": 400\n}\n```"
					},
					"response": []
				},
				{
					"name": "Get User - Not Found",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/:userId",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", ":userId"],
							"variable": [
								{
									"key": "userId",
									"value": "non-existent-user-id"
								}
							]
						},
						"description": "Example of not found error:\n```json\n{\n  \"success\": false,\n  \"message\": \"User not found with userId: non-existent-user-id\",\n  \"data\": null,\n  \"status\": 404\n}\n```"
					},
					"response": []
				}
			],
			"description": "Error response examples"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8005",
			"type": "string",
			"description": "User Service base URL (port 8005)"
		}
	]
}

